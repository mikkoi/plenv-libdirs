#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific Perl lib dirs
#
# Usage: plenv libdirs <dir|dirs>
#        plenv libdirs --unset
#        plenv libdirs --prepend <path>
#        plenv libdirs --append/--add <path>
#        plenv libdirs --remove/rm <path>
#
# Sets the local application-specific Perl libdirs by writing the
# lib directories to a file named `.perl-libdirs'.
# TODO Rest of docs
#
# When you run a Perl command, plenv will look for a `.perl-libdirs'
# file in the current directory and each parent directory. If such
# a file is found in the tree, plenv will take the first line of the file
# and copy it to environment variable PERL5LIB.
#
# If PERL5LIB has already been set (even if it is an empty string),
# plenv will do nothing.
#
# File `.perl-libdirs` first line follows the syntax of PERL5LIB
# variable: paths are separated with colon (`:` character) or
# semicolon (`;`) on Windows (the proper path separator
# being given by the command `perl -V:path_sep`).
# The second line, if used, has settings.
#
# Parameter `--set` sets the contents of the working directory
# `.perl-libdirs` file. It does not check the contents in any way.
# This is same as command `plenv libdirs <path>`.
#
# Parameters `--prepend` and `--append` (alias `--add`)
# add a path either as the first
# path to search (beginning of list) or as the last (end of list).
# If you add a path which itself has a sub dir `lib`, this will
# be detected and added to the path.
# N.B. This only works when using parameters `--prepend` and `--append,
# not when doing `plenv libdirs <path>` or `plenv libdirs --set <path>`.
#
# Parameter `--remove` (alias `--rm`) deletes a path from the list.
#
# Parameter --unset deletes the file `.perl-libdirs`.
#

set -o errexit -o nounset -o pipefail
[ -n "${PLENV_DEBUG-}" ] && set -o xtrace

# Provide plenv completions
if [ "${1-}" = "--complete" ]; then
  echo --unset
  echo --prepend
  echo --append
  echo --add
  echo --remove
  echo --rm
  # TODO Add file/path completion
  exit
fi

PLENV_LIBDIRS="${1-}"
function chop_trailing_slash { echo "${1%\/}"; }
function append_lib_subdir {
  if [ -d "${1}/lib" ]; then echo "${1}/lib"; else echo "$1"; fi
  return 0
}

if [ "$PLENV_LIBDIRS" = "--set" ]; then
  plenv-libdirs-file-write .perl-libdirs "${2}"
elif [ "$PLENV_LIBDIRS" = "--unset" ]; then
  command -p rm -f .perl-libdirs
elif [ "$PLENV_LIBDIRS" = "--prepend" ]; then
  PLENV_LIBDIRS="$(plenv-libdirs)"
  PLENV_NEW_DIR="$(append_lib_subdir "$(chop_trailing_slash "$2")")"
  plenv-libdirs-file-write .perl-libdirs "$PLENV_NEW_DIR${PLENV_LIBDIRS:+":"}$PLENV_LIBDIRS"
elif [ "$PLENV_LIBDIRS" = "--add" ] || [ "$PLENV_LIBDIRS" = "--append" ]; then
  PLENV_LIBDIRS="$(plenv-libdirs)"
  PLENV_NEW_DIR="$(append_lib_subdir "$(chop_trailing_slash "$2")")"
  plenv-libdirs-file-write .perl-libdirs "$PLENV_LIBDIRS${PLENV_LIBDIRS:+":"}$PLENV_NEW_DIR"
elif [ "$PLENV_LIBDIRS" = "--remove" ] || [ "$PLENV_LIBDIRS" = "--rm" ]; then
  PLENV_LIBDIRS="$(plenv-libdirs)"
  PLENV_LIBDIRS=${PLENV_LIBDIRS//":$2:"/":"}
  PLENV_LIBDIRS=${PLENV_LIBDIRS/#"$2:"/}
  PLENV_LIBDIRS=${PLENV_LIBDIRS/%":$2"/}
  plenv-libdirs-file-write .perl-libdirs "$PLENV_LIBDIRS"
elif [[ $PLENV_LIBDIRS =~ ^-- ]]; then
  { echo "plenv: Unknown argument $PLENV_LIBDIRS"
    exit 1
  } >&2
elif [ -n "$PLENV_LIBDIRS" ]; then
  plenv-libdirs-file-write .perl-libdirs "$PLENV_LIBDIRS"
else
  plenv-libdirs-file-read .perl-libdirs ||
  { echo "plenv: no local libdirs configured for this directory"
    exit 1
  } >&2
fi
